
[34m[1mwandb[39m[22m: [33mWARNING[39m Changes to your `wandb` environment variables will be ignored because your `wandb` session has already started. For more information on how to modify your settings with `wandb.init()` arguments, please refer to [34m[4mhttps://wandb.me/wandb-init[39m[24m.
Starting data loading...
Train dataset size: 119823
Eval dataset size: 13314
Model size: 94.294368 M
  0%|                                                                                        | 0/14978 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "d:\Downloads\DS_AI\VDT\MoE\moe\train.py", line 50, in <module>
    trainer.train_model()
  File "d:\Downloads\DS_AI\VDT\MoE\moe\trainer.py", line 48, in train_model
    input_ids = batch['input_ids'].to(self.device)
                ^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'to'
{'labels': [tensor([13278,  4367,  1262,  1325,   829,  1325,  2223,  4440]), tensor([ 411,  362,  898,  310,  728, 1020,  642, 1148]), tensor([ 68,  49,  71, 129, 401, 690, 129, 239]), tensor([3567,  217,   72, 1284,  424, 1470,  335, 1080]), tensor([   6,  118,  171, 1113,    5,  373,   49,  173]), tensor([   1,   71, 1352,    6, 1790,  123,   38,    6]), tensor([ -100,   348,   400,     1,  1991,  1111, 35834,     1]), tensor([-100, 1184, 1498, -100, 1051, 2070,  322, -100]), tensor([-100,  778,  322, -100,    5,  634,  671, -100]), tensor([-100,  792,  989, -100,   49,    6,  482, -100]), tensor([-100,  204,  778, -100,  322,    1,  118, -100]), tensor([-100, 4640,  243, -100, 1598, -100,    6, -100]), tensor([-100,  118,   39, -100, 3572, -100,    1, -100]), tensor([-100,  265,  256, -100, 1696, -100, -100, -100]), tensor([-100,    6,  374, -100, 3212, -100, -100, -100]), tensor([-100,    1,    6, -100,  100, -100, -100, -100]), tensor([-100, -100,    1, -100,  408, -100, -100, -100]), tensor([-100, -100, -100, -100,    5, -100, -100, -100]), tensor([-100, -100, -100, -100,  898, -100, -100, -100]), tensor([-100, -100, -100, -100,  337, -100, -100, -100]), tensor([-100, -100, -100, -100,  663, -100, -100, -100]), tensor([-100, -100, -100, -100,  732, -100, -100, -100]), tensor([-100, -100, -100, -100, 3314, -100, -100, -100]), tensor([-100, -100, -100, -100,  716, -100, -100, -100]), tensor([-100, -100, -100, -100, 2398, -100, -100, -100]), tensor([-100, -100, -100, -100,  790, -100, -100, -100]), tensor([-100, -100, -100, -100, 1033, -100, -100, -100]), tensor([-100, -100, -100, -100,  501, -100, -100, -100]), tensor([-100, -100, -100, -100,   49, -100, -100, -100]), tensor([-100, -100, -100, -100, 3292, -100, -100, -100]), tensor([-100, -100, -100, -100, 4835, -100, -100, -100]), tensor([-100, -100, -100, -100,   54, -100, -100, -100]), tensor([-100, -100, -100, -100,  833, -100, -100, -100]), tensor([-100, -100, -100, -100,  362, -100, -100, -100]), tensor([-100, -100, -100, -100,    6, -100, -100, -100]), tensor([-100, -100, -100, -100,    1, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100]), tensor([-100, -100, -100, -100, -100, -100, -100, -100])], 'input_ids': [tensor([  127,  9533,  4092,  2496, 27050,  2496,  2413,  4209]), tensor([ 7187,  1781, 15414,  6971, 13678,  6971, 17473,  1781]), tensor([16856,  8919,  2273,   495,     5,   495,  4983,  1748]), tensor([  812,  2273,  1904, 35899,  2071, 35899, 10022,  1904]), tensor([    6,  3805, 14847, 35807,    18, 35807,    38,   284]), tensor([    1, 26803, 11196, 10022,  2319, 31085, 35834,     6]), tensor([    0,  4983, 12788,  8560,  2174,  9524,    14,     1]), tensor([    0, 17473,    12,   940,  5444, 14468,  4398,     0]), tensor([    0,     4,  1826,  1904, 11677,  3092,  6971,     0]), tensor([    0, 13311,  2273,    18, 13678,  3694,   495,     0]), tensor([    0,  1904, 34464,  1298,     5,  1859, 35899,     0]), tensor([    0, 10687,  3975, 13471,  4983,  4851, 35807,     0]), tensor([    0,  1328, 16115,     6,  2273,  2071,  2273,     0]), tensor([    0, 13515,  2970,     1, 29456, 27472,   868,     0]), tensor([    0,    13, 33687,     0, 22220, 35834,     3,     0]), tensor([    0,  5071, 22670,     0,  8943,  4964,     6,     0]), tensor([   0, 4640,    6,    0, 1764,  196,    1,    0]), tensor([    0,   318,     1,     0,     5, 35834,     0,     0]), tensor([    0,     6,     0,     0, 11292,  3090,     0,     0]), tensor([    0,     1,     0,     0, 12788,     6,     0,     0]), tensor([    0,     0,     0,     0, 21761,     1,     0,     0]), tensor([    0,     0,     0,     0, 33620,     0,     0,     0]), tensor([   0,    0,    0,    0, 2273,    0,    0,    0]), tensor([0, 0, 0, 0, 4, 0, 0, 0]), tensor([  0,   0,   0,   0, 911,   0,   0,   0]), tensor([   0,    0,    0,    0, 2174,    0,    0,    0]), tensor([   0,    0,    0,    0, 2273,    0,    0,    0]), tensor([    0,     0,     0,     0, 29456,     0,     0,     0]), tensor([    0,     0,     0,     0, 22220,     0,     0,     0]), tensor([    0,     0,     0,     0, 11196,     0,     0,     0]), tensor([    0,     0,     0,     0, 25956,     0,     0,     0]), tensor([  0,   0,   0,   0, 754,   0,   0,   0]), tensor([   0,    0,    0,    0, 2219,    0,    0,    0]), tensor([   0,    0,    0,    0, 4983,    0,    0,    0]), tensor([    0,     0,     0,     0, 32080,     0,     0,     0]), tensor([    0,     0,     0,     0, 24961,     0,     0,     0]), tensor([   0,    0,    0,    0, 2174,    0,    0,    0]), tensor([   0,    0,    0,    0, 2273,    0,    0,    0]), tensor([    0,     0,     0,     0, 29456,     0,     0,     0]), tensor([    0,     0,     0,     0, 22220,     0,     0,     0]), tensor([   0,    0,    0,    0, 4983,    0,    0,    0]), tensor([    0,     0,     0,     0, 21067,     0,     0,     0]), tensor([   0,    0,    0,    0, 3335,    0,    0,    0]), tensor([0, 0, 0, 0, 6, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0])], 'attention_mask': [tensor([1, 1, 1, 1, 1, 1, 1, 1]), tensor([1, 1, 1, 1, 1, 1, 1, 1]), tensor([1, 1, 1, 1, 1, 1, 1, 1]), tensor([1, 1, 1, 1, 1, 1, 1, 1]), tensor([1, 1, 1, 1, 1, 1, 1, 1]), tensor([1, 1, 1, 1, 1, 1, 1, 1]), tensor([0, 1, 1, 1, 1, 1, 1, 1]), tensor([0, 1, 1, 1, 1, 1, 1, 0]), tensor([0, 1, 1, 1, 1, 1, 1, 0]), tensor([0, 1, 1, 1, 1, 1, 1, 0]), tensor([0, 1, 1, 1, 1, 1, 1, 0]), tensor([0, 1, 1, 1, 1, 1, 1, 0]), tensor([0, 1, 1, 1, 1, 1, 1, 0]), tensor([0, 1, 1, 1, 1, 1, 1, 0]), tensor([0, 1, 1, 0, 1, 1, 1, 0]), tensor([0, 1, 1, 0, 1, 1, 1, 0]), tensor([0, 1, 1, 0, 1, 1, 1, 0]), tensor([0, 1, 1, 0, 1, 1, 0, 0]), tensor([0, 1, 0, 0, 1, 1, 0, 0]), tensor([0, 1, 0, 0, 1, 1, 0, 0]), tensor([0, 0, 0, 0, 1, 1, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 1, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0])]}